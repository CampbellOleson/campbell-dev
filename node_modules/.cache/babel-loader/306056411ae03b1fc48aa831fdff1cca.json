{"ast":null,"code":"import _classCallCheck from\"/Users/campbelloleson/Desktop/WebApps/campbell-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/campbelloleson/Desktop/WebApps/campbell-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/campbelloleson/Desktop/WebApps/campbell-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/campbelloleson/Desktop/WebApps/campbell-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/campbelloleson/Desktop/WebApps/campbell-dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import rcIndexImg from\"../../assets/rc_index.png\";import acAristImg from\"../../assets/ac_artist.png\";import fhSplashImg from\"../../assets/fh_splash.png\";import mixr from\"../../assets/mixr.png\";// import rcSplashImg from \"../../assets/rc_splash.png\";\n// import fhFriendsImg from \"../../assets/fh_friends.png\";\n// import acUploadImg from \"../../assets/ac_upload.png\";\nvar RipCamp=function RipCamp(){return React.createElement(\"section\",{id:\"ripcamp\",className:\"project-container\"},React.createElement(\"div\",{className:\"project-content-inner\"},React.createElement(\"div\",null,React.createElement(\"a\",{href:\"https://ripcamp.herokuapp.com\",className:\"header\"},\"RipCamp\"),React.createElement(\"p\",{className:\"project-subheader\"},\"Find the best surf\")),React.createElement(\"section\",{className:\"project-content-container\"},React.createElement(\"div\",{className:\"project-text-content\"},React.createElement(\"p\",null,\"RipCamp is a map-based interface for finding and locating the best surf, created with ExpressJS, MongoDB, and React / Redux.\"),React.createElement(\"ul\",{className:\"features-list\"},React.createElement(\"li\",null,\"Map-based interface integrates Google Maps API\"),React.createElement(\"li\",null,\"Boundaries-based query system to fetch surf spots from database\"),React.createElement(\"li\",null,\"AWS photo hosting allowing for greater scalability\"),React.createElement(\"li\",null,\"Visually fluid and seamless UX/UI\"))))),React.createElement(\"div\",{className:\"project-image-wrapper\"},React.createElement(\"img\",{src:rcIndexImg,alt:\"Home page\",id:\"rc1\",className:\"img-dems\"})));};var Fishhook=function Fishhook(){return React.createElement(\"section\",{id:\"fishhook\",className:\"project-container\"},React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(\"a\",{href:\"https://fish-hook.herokuapp.com/#/\",className:\"header\"},\"Fishhook\"),React.createElement(\"p\",{className:\"project-subheader\"},\"Social media for fishing enthusiasts\")),React.createElement(\"section\",{className:\"project-content-container\"},React.createElement(\"div\",{className:\"project-text-content\"},React.createElement(\"p\",null,\"Fishhook is a social media app where fishing enthusiasts can connect with eachother online. Fishhook is built with Ruby on Rails and PostgreSQL on the backend, and React / Redux on the front end.\"),React.createElement(\"ul\",{className:\"features-list\"},React.createElement(\"li\",null,\"\\\"Friendships\\\" backend association system that leverages Rails ORM to create friend requests and friendships between users.\"),React.createElement(\"li\",null,\"Feed component allowing users to upload photo/text content\"),React.createElement(\"li\",null,\"Feed-filtering system leveraging friendships associations to display content that is relevant to the current user.\"))))),React.createElement(\"div\",{className:\"project-image-wrapper\"},React.createElement(\"img\",{src:fhSplashImg,alt:\"splash page\",id:\"fh1\",className:\"img-dems\"})));};var AmpCamp=function AmpCamp(){return React.createElement(\"section\",{id:\"ampcamp\",className:\"project-container\"},React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(\"a\",{href:\"https://ampcamp.herokuapp.com/#/\",className:\"header\"},\"AmpCamp\"),React.createElement(\"p\",{className:\"project-subheader\"},\"Heavy-metal themed music-sharing platform\")),React.createElement(\"section\",{className:\"project-content-container\"},React.createElement(\"div\",{className:\"project-text-content\"},React.createElement(\"p\",null,\"AmpCamp is a music platform where users can discover new music and upload their own albums, created with ExpressJS, MongoDB, Apollo GraphQL, and React.\"),React.createElement(\"ul\",{className:\"features-list\"},React.createElement(\"li\",null,\"Searchbar and dynamic dropdown lets users to search for albums / artists and displays links to suggested items.\"),React.createElement(\"li\",null,\"Leverages AWS for photo and audio file storage, allowing for scalability.\"),React.createElement(\"li\",null,\"Dynamic UX/UI allowing users to listen to songs as they navigate the app.\"))))),React.createElement(\"div\",{className:\"project-image-wrapper\"},React.createElement(\"img\",{src:acAristImg,alt:\"splash page\",id:\"fh1\",className:\"img-dems\"})));};var MIXR=function MIXR(){return React.createElement(\"section\",{id:\"MIXR\",className:\"project-container\"},React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(\"a\",{href:\"https://ampcamp.herokuapp.com/#/\",className:\"header\"},\"MIXR\"),React.createElement(\"p\",{className:\"project-subheader\"},\"An Audio EQ / Looper, created with regular JavaScript.\")),React.createElement(\"section\",{className:\"project-content-container\"},React.createElement(\"div\",{className:\"project-text-content\"},React.createElement(\"ul\",{className:\"features-list\"},React.createElement(\"li\",null,\"Records audio and stores files in the \\\"audio bank\\\" for later use.\"),React.createElement(\"li\",null,\"Base64 encodes audio files to strings to keep them in local storage. Decodes the files for playback.\"),React.createElement(\"li\",null,\"\\\"Track stacking\\\" allows users to record multiple tracks and play them back in unison.\"),React.createElement(\"li\",null,\"Dynamic playback and volume control on tracks.\"))))),React.createElement(\"div\",{className:\"project-image-wrapper\"},React.createElement(\"img\",{src:mixr,alt:\"MIXR main\",id:\"fh1\",className:\"img-dems\"})));};var Projects=/*#__PURE__*/function(_React$Component){_inherits(Projects,_React$Component);function Projects(){_classCallCheck(this,Projects);return _possibleConstructorReturn(this,_getPrototypeOf(Projects).apply(this,arguments));}_createClass(Projects,[{key:\"render\",value:function render(){return React.createElement(\"div\",{id:\"projects\",className:\"mount-background\"},RipCamp(),Fishhook(),AmpCamp(),MIXR());}}]);return Projects;}(React.Component);export default Projects;","map":{"version":3,"sources":["/Users/campbelloleson/Desktop/WebApps/campbell-dev/src/comps/attributes/Projects.jsx"],"names":["React","rcIndexImg","acAristImg","fhSplashImg","mixr","RipCamp","Fishhook","AmpCamp","MIXR","Projects","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport rcIndexImg from \"../../assets/rc_index.png\";\nimport acAristImg from \"../../assets/ac_artist.png\";\nimport fhSplashImg from \"../../assets/fh_splash.png\";\nimport mixr from \"../../assets/mixr.png\";\n// import rcSplashImg from \"../../assets/rc_splash.png\";\n// import fhFriendsImg from \"../../assets/fh_friends.png\";\n// import acUploadImg from \"../../assets/ac_upload.png\";\n\nconst RipCamp = () => (\n  <section id=\"ripcamp\" className=\"project-container\">\n    <div className=\"project-content-inner\">\n      <div>\n        <a href=\"https://ripcamp.herokuapp.com\" className=\"header\">\n          RipCamp\n        </a>\n        <p className=\"project-subheader\">Find the best surf</p>\n      </div>\n      <section className=\"project-content-container\">\n        <div className=\"project-text-content\">\n          <p>\n            RipCamp is a map-based interface for finding and locating the best\n            surf, created with ExpressJS, MongoDB, and React / Redux.\n          </p>\n          <ul className=\"features-list\">\n            <li>Map-based interface integrates Google Maps API</li>\n            <li>\n              Boundaries-based query system to fetch surf spots from database\n            </li>\n            <li>AWS photo hosting allowing for greater scalability</li>\n            <li>Visually fluid and seamless UX/UI</li>\n          </ul>\n        </div>\n      </section>\n    </div>\n    <div className=\"project-image-wrapper\">\n      <img src={rcIndexImg} alt=\"Home page\" id=\"rc1\" className=\"img-dems\" />\n    </div>\n    {/* <div className=\"image-gallery\">\n      <img className=\"gallery-img\" src={rcSplashImg} alt=\"Splash page\" />\n      <img className=\"gallery-img\" src={rcSplashImg} alt=\"Splash page\" />\n      <img className=\"gallery-img\" src={rcSplashImg} alt=\"Splash page\" />\n    </div> */}\n  </section>\n);\n\nconst Fishhook = () => (\n  <section id=\"fishhook\" className=\"project-container\">\n    <div>\n      <div>\n        <a href=\"https://fish-hook.herokuapp.com/#/\" className=\"header\">\n          Fishhook\n        </a>\n        <p className=\"project-subheader\">\n          Social media for fishing enthusiasts\n        </p>\n      </div>\n      <section className=\"project-content-container\">\n        <div className=\"project-text-content\">\n          <p>\n            Fishhook is a social media app where fishing enthusiasts can connect\n            with eachother online. Fishhook is built with Ruby on Rails and\n            PostgreSQL on the backend, and React / Redux on the front end.\n          </p>\n          <ul className=\"features-list\">\n            <li>\n              \"Friendships\" backend association system that leverages Rails ORM\n              to create friend requests and friendships between users.\n            </li>\n            <li>Feed component allowing users to upload photo/text content</li>\n            <li>\n              Feed-filtering system leveraging friendships associations to\n              display content that is relevant to the current user.\n            </li>\n          </ul>\n        </div>\n      </section>\n    </div>\n    <div className=\"project-image-wrapper\">\n      <img src={fhSplashImg} alt=\"splash page\" id=\"fh1\" className=\"img-dems\" />\n    </div>\n  </section>\n);\n\nconst AmpCamp = () => (\n  <section id=\"ampcamp\" className=\"project-container\">\n    <div>\n      <div>\n        <a href=\"https://ampcamp.herokuapp.com/#/\" className=\"header\">\n          AmpCamp\n        </a>\n        <p className=\"project-subheader\">\n          Heavy-metal themed music-sharing platform\n        </p>\n      </div>\n      <section className=\"project-content-container\">\n        <div className=\"project-text-content\">\n          <p>\n            AmpCamp is a music platform where users can discover new music and\n            upload their own albums, created with ExpressJS, MongoDB, Apollo\n            GraphQL, and React.\n          </p>\n          <ul className=\"features-list\">\n            <li>\n              Searchbar and dynamic dropdown lets users to search for albums /\n              artists and displays links to suggested items.\n            </li>\n            <li>\n              Leverages AWS for photo and audio file storage, allowing for\n              scalability.\n            </li>\n            <li>\n              Dynamic UX/UI allowing users to listen to songs as they navigate\n              the app.\n            </li>\n          </ul>\n        </div>\n      </section>\n    </div>\n    <div className=\"project-image-wrapper\">\n      <img src={acAristImg} alt=\"splash page\" id=\"fh1\" className=\"img-dems\" />\n    </div>\n  </section>\n);\n\nconst MIXR = () => (\n  <section id=\"MIXR\" className=\"project-container\">\n    <div>\n      <div>\n        <a href=\"https://ampcamp.herokuapp.com/#/\" className=\"header\">\n          MIXR\n        </a>\n        <p className=\"project-subheader\">\n          An Audio EQ / Looper, created with regular JavaScript.\n        </p>\n      </div>\n      <section className=\"project-content-container\">\n        <div className=\"project-text-content\">\n          <ul className=\"features-list\">\n            <li>\n              Records audio and stores files in the \"audio bank\" for later use.\n            </li>\n            <li>\n              Base64 encodes audio files to strings to keep them in local\n              storage. Decodes the files for playback.\n            </li>\n            <li>\n              \"Track stacking\" allows users to record multiple tracks and play\n              them back in unison.\n            </li>\n            <li>Dynamic playback and volume control on tracks.</li>\n          </ul>\n        </div>\n      </section>\n    </div>\n    <div className=\"project-image-wrapper\">\n      <img src={mixr} alt=\"MIXR main\" id=\"fh1\" className=\"img-dems\" />\n    </div>\n  </section>\n);\n\nclass Projects extends React.Component {\n  render() {\n    return (\n      <div id=\"projects\" className=\"mount-background\">\n        {/* <div className=\"header\">\n          <strong>Projects</strong>\n        </div> */}\n        {RipCamp()}\n        {Fishhook()}\n        {AmpCamp()}\n        {MIXR()}\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}